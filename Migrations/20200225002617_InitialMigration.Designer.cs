// <auto-generated />
using System;
using LightYear.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LightYear.Migrations
{
    [DbContext(typeof(LightYearContext))]
    [Migration("20200225002617_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LightYear.Models.Fleet", b =>
                {
                    b.Property<int>("FleetId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PlayerId");

                    b.Property<int>("ShipId");

                    b.HasKey("FleetId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ShipId");

                    b.ToTable("Fleets");
                });

            modelBuilder.Entity("LightYear.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("PlayerState");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("LightYear.Models.Ship", b =>
                {
                    b.Property<int>("ShipId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Damage");

                    b.Property<int>("Health");

                    b.Property<int>("PlayerId");

                    b.Property<int>("Position");

                    b.Property<string>("Type");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("ShipId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("LightYear.Models.Fleet", b =>
                {
                    b.HasOne("LightYear.Models.Player", "Player")
                        .WithMany("Commanding")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LightYear.Models.Ship", "Ship")
                        .WithMany("Squad")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LightYear.Models.Ship", b =>
                {
                    b.HasOne("LightYear.Models.Player", "Owner")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
