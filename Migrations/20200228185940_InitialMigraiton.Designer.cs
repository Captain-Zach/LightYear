// <auto-generated />
using System;
using LightYear.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LightYear.Migrations
{
    [DbContext(typeof(LightYearContext))]
    [Migration("20200228185940_InitialMigraiton")]
    partial class InitialMigraiton
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LightYear.Models.GameState", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("p1Damage");

                    b.Property<int>("p1Population");

                    b.Property<bool>("p1Turn");

                    b.Property<int>("p2Damage");

                    b.Property<int>("p2Population");

                    b.Property<bool>("p2Turn");

                    b.Property<int>("turnNumber");

                    b.HasKey("GameId");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("LightYear.Models.LightYearDebugger", b =>
                {
                    b.Property<int>("LightYearDebuggerId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("P1_Pop_lost_In_Turn");

                    b.Property<int>("P1_Total_Pop_Lost");

                    b.Property<int>("P1_Total_Ship_Kills");

                    b.Property<int>("P2_Pop_lost_In_Turn");

                    b.Property<int>("P2_Total_Pop_Lost");

                    b.Property<int>("P2_Total_Ship_Kills");

                    b.Property<int>("Total_Pop_Lost");

                    b.Property<int>("Total_Ships_Lost");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("LightYearDebuggerId");

                    b.ToTable("LightYearDebug");
                });

            modelBuilder.Entity("LightYear.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("LightYearDebuggerId");

                    b.Property<string>("Name");

                    b.Property<int>("PlayerState");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("PlayerId");

                    b.HasIndex("LightYearDebuggerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("LightYear.Models.Ship", b =>
                {
                    b.Property<int>("ShipId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cost");

                    b.Property<int>("Damage");

                    b.Property<int>("GameId");

                    b.Property<int>("Health");

                    b.Property<int?>("LightYearDebuggerId");

                    b.Property<int?>("LightYearDebuggerId1");

                    b.Property<int?>("LightYearDebuggerId2");

                    b.Property<int?>("LightYearDebuggerId3");

                    b.Property<int?>("LightYearDebuggerId4");

                    b.Property<int?>("PlayerId");

                    b.Property<int>("PlayerState");

                    b.HasKey("ShipId");

                    b.HasIndex("LightYearDebuggerId");

                    b.HasIndex("LightYearDebuggerId1");

                    b.HasIndex("LightYearDebuggerId2");

                    b.HasIndex("LightYearDebuggerId3");

                    b.HasIndex("LightYearDebuggerId4");

                    b.HasIndex("PlayerId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("LightYear.Models.Player", b =>
                {
                    b.HasOne("LightYear.Models.LightYearDebugger")
                        .WithMany("Players")
                        .HasForeignKey("LightYearDebuggerId");
                });

            modelBuilder.Entity("LightYear.Models.Ship", b =>
                {
                    b.HasOne("LightYear.Models.LightYearDebugger")
                        .WithMany("Armada")
                        .HasForeignKey("LightYearDebuggerId");

                    b.HasOne("LightYear.Models.LightYearDebugger")
                        .WithMany("P1_Ships_Killed_In_Turn")
                        .HasForeignKey("LightYearDebuggerId1");

                    b.HasOne("LightYear.Models.LightYearDebugger")
                        .WithMany("P1_Ships_Targeted")
                        .HasForeignKey("LightYearDebuggerId2");

                    b.HasOne("LightYear.Models.LightYearDebugger")
                        .WithMany("P2_Ships_Killed_In_Turn")
                        .HasForeignKey("LightYearDebuggerId3");

                    b.HasOne("LightYear.Models.LightYearDebugger")
                        .WithMany("P2_Ships_Targeted")
                        .HasForeignKey("LightYearDebuggerId4");

                    b.HasOne("LightYear.Models.Player")
                        .WithMany("Armada")
                        .HasForeignKey("PlayerId");
                });
#pragma warning restore 612, 618
        }
    }
}
